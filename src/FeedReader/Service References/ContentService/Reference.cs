//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FeedReader.ContentService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadFeedRequest", Namespace="http://schemas.datacontract.org/2004/07/FeedService.Contract.ContentService")]
    [System.SerializableAttribute()]
    public partial class LoadFeedRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FetchSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FeedReader.ContentService.FeedMode ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SearchPatternField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubscriptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset UtcDateIndexField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FetchSize {
            get {
                return this.FetchSizeField;
            }
            set {
                if ((this.FetchSizeField.Equals(value) != true)) {
                    this.FetchSizeField = value;
                    this.RaisePropertyChanged("FetchSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FeedReader.ContentService.FeedMode Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SearchPattern {
            get {
                return this.SearchPatternField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchPatternField, value) != true)) {
                    this.SearchPatternField = value;
                    this.RaisePropertyChanged("SearchPattern");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubscriptionId {
            get {
                return this.SubscriptionIdField;
            }
            set {
                if ((this.SubscriptionIdField.Equals(value) != true)) {
                    this.SubscriptionIdField = value;
                    this.RaisePropertyChanged("SubscriptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset UtcDateIndex {
            get {
                return this.UtcDateIndexField;
            }
            set {
                if ((this.UtcDateIndexField.Equals(value) != true)) {
                    this.UtcDateIndexField = value;
                    this.RaisePropertyChanged("UtcDateIndex");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FeedMode", Namespace="http://schemas.datacontract.org/2004/07/FeedService.Contract.ContentService")]
    public enum FeedMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Subscription = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://schemas.datacontract.org/2004/07/FeedService.Contract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(FeedReader.ContentService.LoadFeedResult))]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FeedReader.ContentService.ResultCode CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FeedReader.ContentService.ResultCode Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoadFeedResult", Namespace="http://schemas.datacontract.org/2004/07/FeedService.Contract.ContentService")]
    [System.SerializableAttribute()]
    public partial class LoadFeedResult : FeedReader.ContentService.Result {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private FeedReader.ContentService.AccountFeedItem[] ItemsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public FeedReader.ContentService.AccountFeedItem[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultCode", Namespace="http://schemas.datacontract.org/2004/07/FeedService.Contract")]
    public enum ResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failure = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountFeedItem", Namespace="http://schemas.datacontract.org/2004/07/FeedService.Contract.ContentService")]
    [System.SerializableAttribute()]
    public partial class AccountFeedItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubscriptionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubscriptionItemIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemContent {
            get {
                return this.ItemContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemContentField, value) != true)) {
                    this.ItemContentField = value;
                    this.RaisePropertyChanged("ItemContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubscriptionId {
            get {
                return this.SubscriptionIdField;
            }
            set {
                if ((this.SubscriptionIdField.Equals(value) != true)) {
                    this.SubscriptionIdField = value;
                    this.RaisePropertyChanged("SubscriptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SubscriptionItemId {
            get {
                return this.SubscriptionItemIdField;
            }
            set {
                if ((this.SubscriptionItemIdField.Equals(value) != true)) {
                    this.SubscriptionItemIdField = value;
                    this.RaisePropertyChanged("SubscriptionItemId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ContentService.IContentService")]
    public interface IContentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/LoadItemFeed", ReplyAction="http://tempuri.org/IContentService/LoadItemFeedResponse")]
        FeedReader.ContentService.LoadFeedResult LoadItemFeed(FeedReader.ContentService.LoadFeedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/LoadItemFeed", ReplyAction="http://tempuri.org/IContentService/LoadItemFeedResponse")]
        System.Threading.Tasks.Task<FeedReader.ContentService.LoadFeedResult> LoadItemFeedAsync(FeedReader.ContentService.LoadFeedRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/SynchronizeSubscriptions", ReplyAction="http://tempuri.org/IContentService/SynchronizeSubscriptionsResponse")]
        FeedReader.ContentService.Result SynchronizeSubscriptions(int accountId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContentService/SynchronizeSubscriptions", ReplyAction="http://tempuri.org/IContentService/SynchronizeSubscriptionsResponse")]
        System.Threading.Tasks.Task<FeedReader.ContentService.Result> SynchronizeSubscriptionsAsync(int accountId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContentServiceChannel : FeedReader.ContentService.IContentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContentServiceClient : System.ServiceModel.ClientBase<FeedReader.ContentService.IContentService>, FeedReader.ContentService.IContentService {
        
        public ContentServiceClient() {
        }
        
        public ContentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public FeedReader.ContentService.LoadFeedResult LoadItemFeed(FeedReader.ContentService.LoadFeedRequest request) {
            return base.Channel.LoadItemFeed(request);
        }
        
        public System.Threading.Tasks.Task<FeedReader.ContentService.LoadFeedResult> LoadItemFeedAsync(FeedReader.ContentService.LoadFeedRequest request) {
            return base.Channel.LoadItemFeedAsync(request);
        }
        
        public FeedReader.ContentService.Result SynchronizeSubscriptions(int accountId) {
            return base.Channel.SynchronizeSubscriptions(accountId);
        }
        
        public System.Threading.Tasks.Task<FeedReader.ContentService.Result> SynchronizeSubscriptionsAsync(int accountId) {
            return base.Channel.SynchronizeSubscriptionsAsync(accountId);
        }
    }
}
